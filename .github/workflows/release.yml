name: Release

on:
  push:
    tags:
      - "*-v*.*.*"

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-info:
    runs-on: ubuntu-latest
    outputs:
      mod-name: ${{ steps.mod-name.outputs.result }}
      version: ${{ steps.version.outputs.result }}
    steps:
      - name: Get Mod Name
        id: mod-name
        run: echo "result=$(echo ${{ github.ref_name }} | cut -d'-' -f1)" >> $GITHUB_OUTPUT

      - name: Get Version
        id: version
        run: echo "result=$(echo ${{ github.ref_name }} | sed 's/^.*-v//')" >> $GITHUB_OUTPUT
  build:
    needs: release-info
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Install dotnet
        uses: actions/setup-dotnet@v5.0.0

      - name: Build
        run: dotnet build ./${{ needs.release-info.outputs.mod-name }} -c Release

      - name: Upload build archive
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build
          path: ${{ needs.release-info.outputs.mod-name  }}/bin/Release/${{ needs.release-info.outputs.mod-name }}.zip
  github-release:
    needs: [build, release-info]
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: build
          path: build

      - name: Get auto-generated release notes
        id: release-notes
        uses: actions/github-script@v8.0.0
        with:
          script: |
            const response = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref.replace('refs/tags/', '')
            });
            return response.data.body;
          result-encoding: string

      - name: Create CHANGELOG.md
        run: |
          cat << 'NOTESEOF' > CHANGELOG.md
          ${{ steps.release-notes.outputs.result }}
          NOTESEOF

          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep "^${{ needs.release-info.outputs.mod-name }}-v" | head -n 2 | tail -n 1)

          if [ ! -z "$PREVIOUS_TAG" ]; then
            FILTERED_COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse \
              | grep -i "^- [a-z]\+(${{ needs.release-info.outputs.mod-name }})" \
              | sed "s/(${{ needs.release-info.outputs.mod-name }})//i")

            if [ ! -z "$FILTERED_COMMITS" ]; then
              sed -i '/^## What'\''s Changed$/a\\n'"$FILTERED_COMMITS" CHANGELOG.md
            fi
          fi

      - name: Release
        uses: softprops/action-gh-release@v2.3.3
        with:
          name: "${{ needs.release-info.outputs.mod-name }} v${{ needs.release-info.outputs.version }}"
          files: build/${{ needs.release-info.outputs.mod-name }}.zip
          fail_on_unmatched_files: true
          body_path: CHANGELOG.md
          make_latest: true
  thunderstore-release:
    needs: [build, release-info]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Thunderstore CLI config
        uses: actions/checkout@v5.0.0
        with:
          sparse-checkout: ${{ needs.release-info.outputs.mod-name }}
          sparse-checkout-cone-mode: false

      - name: Download dist artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: build
          path: ${{ needs.release-info.outputs.mod-name }}/build

      - name: Install dotnet
        uses: actions/setup-dotnet@v5.0.0

      - name: Install Thunderstore CLI
        run: dotnet tool install --global tcli

      - name: Create CHANGELOG.md
        run: echo "Changelogs available [on GitHub](https://github.com/Bergbok/Silksong-Mods/releases?q=${{ needs.release-info.outputs.mod-name  }})" > ${{ needs.release-info.outputs.mod-name  }}/build/CHANGELOG.md

      - name: Release
        run: |
          cd ${{ needs.release-info.outputs.mod-name }}
          tcli publish --token ${{ secrets.THUNDERSTORE_TOKEN }}
